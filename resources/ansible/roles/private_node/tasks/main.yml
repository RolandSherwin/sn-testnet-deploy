---
- name: define conditional variables
  set_fact:
    home_network_flag_is_set: false
    nat_randomized_role_is_set_is_set: false
    do_gateway_is_configured: false
    nat_gateway_is_configured: false

- name: check if --home-network flag is set in safenode services
  # cat to avoid exit code 1 when grep returns empty
  shell: grep -- '--home-network' /etc/systemd/system/safenode*.service | cat
  register: home_network_flag

- name: set home_network_flag_is_set to true if the flag is found
  set_fact:
    home_network_flag_is_set: true
  when: home_network_flag.stdout.find('--home-network') != -1

- debug: var=home_network_flag.stdout
- debug: var=home_network_flag_is_set

- name: stop safenode services
  become: true
  command: safenode-manager stop
  when: not home_network_flag_is_set

- name: check if telegraf role is set to NAT_RANDOMIZED_NODE
  shell: grep NAT_RANDOMIZED_NODE /etc/default/telegraf | cat
  register: telegraf_host_role

- name: set nat_randomized_role_is_set to true if telegraf role is set to NAT_RANDOMIZED_NODE
  set_fact:
    nat_randomized_role_is_set: true
  when: telegraf_host_role.stdout.find('NAT_RANDOMIZED_NODE') != -1

- name: stop telegraf
  become: True
  command: systemctl stop telegraf
  when: not nat_randomized_role_is_set

- name: obtain DO gateway ip
  command: curl -s http://169.254.169.254/metadata/v1/interfaces/public/0/ipv4/gateway
  register: do_gateway_ip

- name: check if DO gateway is configured
  command: ip route show
  register: do_gateway_route

- name: set do_gateway_is_configured to true if DO gateway is configured
  set_fact:
    do_gateway_is_configured: true
  when: do_gateway_route.stdout.find('169.254.168.254') != -1 and do_gateway_route.stdout.find(do_gateway_ip.stdout) != -1

- name: add route to DO gateway via eth0
  command: ip route add 169.254.168.254 via {{ do_gateway_ip.stdout }} dev eth0
  when: not do_gateway_is_configured

- name: check if nat gateway is configured
  command: ip route show
  register: nat_gateway_route

- name: set nat_gateway_is_configured to true if nat gateway is configured
  set_fact:
    nat_gateway_is_configured: true
  when: nat_gateway_route.stdout.find(nat_gateway_private_ip_eth1) != -1

- name: change default route to private ip of DO droplet used as a safenode gateway
  command: ip route change default via {{ nat_gateway_private_ip_eth1 }}
  when: not nat_gateway_is_configured

- name: verify route is going through nat_gateway private ip
  command: ip route get 8.8.8.8
  register: route_output

- debug: var=route_output.stdout

- name: setup safenode services to use --home-network flag
  shell: sed -i 's/--rpc/--home-network --rpc/g' /etc/systemd/system/safenode*.service
  when: not home_network_flag_is_set

- name: refresh systemd daemon
  command: systemctl daemon-reload
  when: not home_network_flag_is_set

- name: restart safenode services
  command: safenode-manager start
  when: not home_network_flag_is_set

- name: change telegraf's environment variable for SAFENODE_HOST_ROLE from GENERIC_NODE to NAT_RANDOMIZED_NODE
  shell: sed -i 's/GENERIC_NODE/NAT_RANDOMIZED_NODE/g' /etc/default/telegraf
  when: not nat_randomized_role_is_set

- name: start telegraf
  command: systemctl start telegraf
  when: not nat_randomized_role_is_set
